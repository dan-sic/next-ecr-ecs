name: Next ECR ECS Pipeline

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-central-1

jobs:
  registry:
    runs-on: ubuntu-latest
    outputs:
      registry_url: ${{ steps.create_ecr.outputs.registry_url }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Setup AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: "Create ECR"
        id: create_ecr
        run: |
          cd terraform/registry

          terraform init \
          -backend-config=config/config.s3.tfbackend \
          -reconfigure \
          -input=false

          terraform apply \
          -var-file=vars.tfvars \
          -input=false \
          -auto-approve

          echo "registry_url=$(terraform output -raw repository_url)" >> "$GITHUB_OUTPUT"

  docker-build:
    runs-on: ubuntu-latest
    needs: registry
    env:
      REGISTRY_URL: ${{ needs.registry.outputs.registry_url }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Setup AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: "Build and Push Docker Image"
        run: |
          export IMAGE_TAG=$(git rev-parse --short HEAD)

          aws ecr get-login-password --region ${AWS_REGION} | docker login \
          --username AWS \
          --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${AWS_REGION}.amazonaws.com

          docker build -t ${{ env.REGISTRY_URL }}:${IMAGE_TAG} .
          docker push ${{ env.REGISTRY_URL }}:${IMAGE_TAG}

  deploy-app:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Setup AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: "Deploy App"
        run: |
          export TF_VAR_image_tag=$(git rev-parse --short HEAD)

          cd terraform/deployment

          terraform init \
          -backend-config=config/config.s3.tfbackend \
          -reconfigure \
          -input=false

          terraform apply \
          -var-file=vars.tfvars \
          -input=false \
          -auto-approve
